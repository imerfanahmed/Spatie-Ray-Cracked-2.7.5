{"version":3,"file":"index-9022c26c.js","sources":["../../src/pages/servers/components/Input.tsx","../../src/pages/servers/components/Label.tsx","../../src/pages/servers/components/Button.tsx","../../src/pages/servers/PrivateKeyPrompt.tsx","../../node_modules/lodash/noop.js","../../src/pages/servers/ServerItem.tsx","../../src/pages/servers/EditServer.tsx","../../src/stores/servers.ts","../../src/pages/servers/index.tsx"],"sourcesContent":["import React, { ComponentProps } from 'react';\n\ntype Props = Omit<ComponentProps<'input'>, 'onChange' | 'className'> & {\n\tonChange?: (value: string) => void;\n};\n\nexport default function Input({\n\tonChange = () => {},\n\t...props\n}: Props) {\n\treturn (\n\t\t<input\n\t\t\t{...props}\n\t\t\tclassName=\"\n                app-region-no-drag\n                w-full px-4 h-10\n                bg-gray-100 outline-none rounded-sm\n                text-gray-700 focus:text-indigo-700 focus:bg-indigo-50\n            \"\n\t\t\tonChange={(e) => onChange(e.target.value)}\n\t\t/>\n\t);\n}\n","import React, { PropsWithChildren } from 'react';\n\nexport default function Label({ htmlFor, children }: PropsWithChildren<{ htmlFor?: string }>){\n\treturn (\n\t\t<label htmlFor={htmlFor} className=\"font-semibold text-sm text-gray-500 dark:text-gray-400\">\n\t\t\t{children}\n\t\t</label>\n\t);\n}","import React from 'react';\n\ntype Props = {\n    id?: string;\n    children: React.ReactNode;\n    disabled?: boolean;\n    onClick?: () => void;\n};\n\nexport default function Button({ id, children, disabled, onClick }: Props) {\n    return (\n        <button\n            id={id}\n            className=\"\n                py-2 px-4\n                text-white font-medium \n                focus:outline-none focus:ring-0\n                disabled:bg-gray-500 bg-indigo-500 enabled:hover:bg-indigo-600\n                rounded\n                transform active:translate-y-px\n                cursor-default select-none app-region-no-drag\n            \"\n            disabled={disabled}\n            onClick={onClick}\n        >\n            {children}\n        </button>\n    );\n}\n","import React, { useState } from 'react';\nimport Input from './components/Input';\nimport Label from './components/Label';\nimport Button from './components/Button';\nimport { TimesIcon } from '@/components/Icons';\n\ntype Props = {\n    privateKeyPath: string;\n    onSubmit: (privateKeyPassphrase: string) => void;\n    onCancel: () => void;\n};\n\nexport default function PrivateKeyPrompt({ privateKeyPath, onSubmit, onCancel }: Props) {\n    const [privateKeyPassphrase, setPrivateKeyPassphrase] = useState('');\n\n    function save() {\n        window.Ray.servers.updatePrivateKeyPassphrase({ privateKeyPath, privateKeyPassphrase });\n\n        onSubmit(privateKeyPassphrase);\n    }\n\n    function cancel() {\n        onCancel();\n    }\n\n    return (\n        <div\n            className=\"\n                animation-overlay\n                fixed inset-0\n                flex items-center justify-center overflow-y-auto\n                bg-opacity-50 bg-black z-50\n            \"\n            onClick={() => cancel()}\n        >\n            <div className=\"relative px-10 w-full max-w-xl max-h-screen\" onClick={(e) => e.stopPropagation()}>\n                <div\n                    className=\"\n                        animation-dialog\n                        relative bg-white dark:bg-gray-900 shadow-2xl rounded-sm\n                        text-gray-900 dark:text-gray-300\n                        px-8 sm:px-16 py-12\n                    \"\n                >\n                    <span\n                        className=\"\n                                absolute top-0 right-0 p-4\n                                leading-none text-xl text-gray-400 hover:text-gray-600 transition-colors\n                            \"\n                        onClick={() => cancel()}\n                    >\n                        <span className=\"inline-block w-4 h-4\">\n                            <TimesIcon />\n                        </span>\n                    </span>\n\n                    <div className=\"relative mx-auto max-w-xl grid gap-4\">\n                        <h1 className=\"markup-h1\">Encrypted private key</h1>\n\n                        <p>\n                            The private key for this server (<code>{privateKeyPath}</code>) is encrypted with a\n                            passphrase.\n                        </p>\n\n                        <div className=\"grid gap-2\">\n                            <Label htmlFor=\"username\">Private key passphrase</Label>\n                            <Input\n                                type=\"password\"\n                                onChange={(value) => setPrivateKeyPassphrase(value)}\n                                value={privateKeyPassphrase}\n                            />\n                        </div>\n\n                        <div>\n                            <Button onClick={() => save()}>Save</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Server } from '/shared/types';\nimport { ToggleButton as HeaderButton } from '@/pages/main/components/header/Button';\nimport PrivateKeyPrompt from './PrivateKeyPrompt';\nimport noop from 'lodash/noop';\nimport { BoltIcon, ExchangeIcon, PenIcon, TrashIcon, PlugIcon } from '@/components/Icons';\n\ntype Props = {\n    server: Server;\n    onRemove: () => void;\n    onEdit: () => void;\n    onChange: (server: Server) => void;\n};\n\nexport default function ServerItem({ server, onRemove, onEdit, onChange }: Props) {\n    const [isConnected, setIsConnected] = useState(false);\n    const [isConnecting, setIsConnecting] = useState(false);\n    const [showingPrivateKeyPrompt, setShowingPrivateKeyPrompt] = useState(false);\n\n    const connection = useMemo(() => window.Ray.servers.connection(server.uuid), [server.uuid]);\n    useEffect(() => {\n        (async function(){\n            setIsConnected(await connection.isConnected());\n        })();\n\n        connection.onDisconnect(() => {\n            setIsConnected(false);\n        })\n    }, []);\n\n    function connect(targetServer: Server | null = null) {\n        setIsConnecting(true);\n\n        (async function() {\n            try {\n                await window.Ray.servers.connectSsh(targetServer || server);\n                setIsConnected(true);\n            } catch (error: any) {\n                console.log(error);\n                setIsConnected(false);\n\n                if (error.toString().includes('private key detected, but no passphrase given')) {\n                    setShowingPrivateKeyPrompt(true);\n                    return;\n                }\n\n                if (error.toString().includes('private OpenSSH key detected, but no passphrase given')) {\n                    setShowingPrivateKeyPrompt(true);\n                    return;\n                }\n\n                if (error.toString().toLowerCase().includes('bad passphrase')) {\n                    alert(`The provided passphrase for private key \\`${server.privateKeyPath}\\` is incorrect.`);\n                    setShowingPrivateKeyPrompt(true);\n                    return;\n                }\n\n                if (error.toString().includes('Unable to bind to')) {\n                    alert(\n                        \"Ray was unable to bind to the remote server's port. Is the port in use or is someone else using ray on this server?\"\n                    );\n                    return;\n                }\n\n                if (error.toString().includes('Timed out while waiting for handshake')) {\n                    alert(\n                        'Ray timed out while waiting for a handshake from your server. Are your credentials correct and can you SSH to your server?'\n                    );\n                    return;\n                }\n\n                if (error.toString().includes('Connection lost before handshake')) {\n                    alert(\n                        'Ray lost the connection before the handshake with your server. Are your credentials correct and can you SSH to your server?'\n                    );\n                    return;\n                }\n\n                alert(error);\n            } finally {\n                setIsConnecting(false);\n            }\n        })()\n    }\n\n    function disconnect() {\n        window.Ray.servers.disconnectSsh(server);\n        setIsConnected(false);\n        setIsConnecting(false);\n    }\n\n    function remove() {\n        disconnect();\n        window.Ray.servers.remove(server);\n        onRemove();\n    }\n\n    function edit() {\n        onEdit();\n    }\n\n    function handlePrivateKeyPromptSubmit(privateKeyPassphrase: string) {\n        const updatedServer = { ...server, privateKeyPassphrase };\n        setShowingPrivateKeyPrompt(false);\n        onChange(updatedServer);\n        connect(updatedServer);\n    }\n\n    return (\n        <li\n            className={`\n                py-3 w-full\n                flex items-center\n                border-b border-gray-400 dark:border-gray-600 border-opacity-50 dark:border-opacity-50\n                ${server.needsCredentialsUpdate ? 'bg-yellow-50 px-2 mb-2 rounded' : ''}\n            `}\n        >\n            {showingPrivateKeyPrompt && (\n                <PrivateKeyPrompt\n                    onCancel={() => setShowingPrivateKeyPrompt(false)}\n                    onSubmit={handlePrivateKeyPromptSubmit}\n                    privateKeyPath={server.privateKeyPath || '~/.ssh/id_rsa'}\n                />\n            )}\n            <div className=\"flex-none\">\n                <ConnectButton\n                    isConnected={isConnected}\n                    isConnecting={isConnecting}\n                    needsCredentialsUpdate={server.needsCredentialsUpdate || false}\n                    connect={() => connect()}\n                    disconnect={() => disconnect()}\n                    edit={() => edit()}\n                />\n            </div>\n            <div className={`min-w-0 mx-4 flex ${!isConnected && 'text-gray-500'}`}>\n                {server.label && (\n                    <span className=\"mr-1\">\n                        <span className=\"font-bold\">{server.label}</span> -\n                    </span>\n                )}\n                <span>{server.username}@</span>\n                <span className=\"min-w-0 truncate font-semibold\">{server.host}</span>\n                <span>:{server.port}</span>\n                {server.needsCredentialsUpdate && <span className=\"text-yellow-500 ml-1\">- update credentials</span>}\n            </div>\n            <div className=\"ml-auto flex-none flex space-x-2\">\n                <HeaderButton title=\"Edit\" disabled={isConnected || isConnecting} onClick={() => edit()}>\n                    <PenIcon />\n                </HeaderButton>\n                <HeaderButton title=\"Remove\" disabled={isConnected || isConnecting} onClick={() => remove()}>\n                    <TrashIcon />\n                </HeaderButton>\n            </div>\n        </li>\n    );\n}\n\ntype ConnectButtonProps = {\n    isConnected: boolean;\n    isConnecting: boolean;\n    needsCredentialsUpdate: boolean;\n    connect: () => void;\n    disconnect: () => void;\n    edit: () => void;\n};\n\nfunction ConnectButton({\n    isConnected,\n    isConnecting,\n    needsCredentialsUpdate,\n    connect,\n    disconnect,\n    edit,\n}: ConnectButtonProps) {\n    if (isConnected) {\n        return (\n            <HeaderButton title=\"Disconnect\" active onClick={() => disconnect()}>\n                <BoltIcon />\n            </HeaderButton>\n        );\n    }\n\n    if (isConnecting) {\n        return (\n            <HeaderButton active disabled onClick={noop}>\n                <ExchangeIcon />\n            </HeaderButton>\n        );\n    }\n\n    if (needsCredentialsUpdate) {\n        return (\n            <HeaderButton title=\"Edit\" onClick={() => edit()}>\n                <PenIcon />\n            </HeaderButton>\n        );\n    }\n\n    return (\n        <HeaderButton title=\"Connect\" onClick={() => connect()}>\n            <PlugIcon />\n        </HeaderButton>\n    );\n}\n","import React, { useState } from 'react';\nimport type { Server } from '/shared/types';\nimport { TimesIcon } from '@/components/Icons';\nimport Label from '@/pages/servers/components/Label';\nimport Input from '@/pages/servers/components/Input';\nimport Button from '@/pages/servers/components/Button';\n\ntype Props = {\n    server: Server;\n    onChange: (server: Server) => void;\n    onCancel: () => void;\n};\n\nexport default function EditServer({ server, onChange, onCancel }: Props) {\n    const [label, setLabel] = useState(server.label || '');\n    const [host, setHost] = useState(server.host || 'localhost');\n    const [port, setPort] = useState(server.port?.toString() || '22');\n    const [password, setPassword] = useState(server.password || '');\n    const [privateKeyPath, setPrivateKeyPath] = useState(server.privateKeyPath || '~/.ssh/id_rsa');\n    const [username, setUsername] = useState(server.username || 'forge');\n    const [toggleSSH, setToggleSSH] = useState(!server.password);\n\n    function save() {\n        if (toggleSSH) {\n            setPassword('');\n        }\n\n        const updatedServer: Server = {\n            label,\n            uuid: (server.uuid || Math.random().toString()).replace('.', ''),\n            host,\n            port: parseInt(port),\n            password: toggleSSH ? '' : password,\n            privateKeyPath,\n            username,\n            needsCredentialsUpdate: false,\n        };\n\n        window.Ray.servers.update(updatedServer);\n        window.Ray.servers.disconnectSsh(updatedServer);\n\n        onChange(updatedServer);\n    }\n\n    function cancel() {\n        onCancel();\n    }\n\n    function pickSSH() {\n        setToggleSSH(true);\n    }\n\n    function pickPassword() {\n        setToggleSSH(false);\n    }\n\n    return (\n        <div\n            className=\"\n                animation-overlay\n                fixed inset-0\n                flex items-center justify-center overflow-y-auto\n                bg-opacity-50 bg-black z-50\n            \"\n            onClick={cancel}\n        >\n            <div className=\"relative px-10 w-full max-w-xl max-h-screen\" onClick={(e) => e.stopPropagation()}>\n                <div\n                    className=\"\n                        animation-dialog\n                        relative bg-white dark:bg-gray-900 shadow-2xl rounded-sm\n                        text-gray-900 dark:text-gray-300\n                        px-8 sm:px-16 py-12\n                    \"\n                >\n                    <span\n                        className=\"\n                                absolute top-0 right-0 p-4\n                                leading-none text-xl text-gray-400 hover:text-gray-600 transition-colors\n                            \"\n                        onClick={cancel}\n                    >\n                        <span className=\"inline-block w-4 h-4\">\n                            <TimesIcon />\n                        </span>\n                    </span>\n\n                    <div className=\"relative mx-auto max-w-xl grid gap-4\">\n                        <h1 className=\"markup-h1\">\n                            {server.uuid && 'Edit server'}\n                            {!server.uuid && 'Add server'}\n                        </h1>\n                        <div>\n                            <div className=\"grid gap-2 w-2/3\">\n                                <Label htmlFor=\"label\">Label</Label>\n                                <Input id=\"label\" onChange={setLabel} value={label} />\n                            </div>\n                        </div>\n                        <div className=\"flex space-x-2\">\n                            <div className=\"grid gap-2 w-2/3\">\n                                <Label htmlFor=\"host\">Host</Label>\n                                <Input id=\"host\" onChange={setHost} value={host} />\n                            </div>\n                            <div className=\"grid gap-2 w-1/3\">\n                                <Label htmlFor=\"port\">Port</Label>\n                                <Input id=\"port\" onChange={setPort} value={port} />\n                            </div>\n                        </div>\n\n                        <div className=\"grid gap-2\">\n                            <Label htmlFor=\"username\">Username</Label>\n                            <Input id=\"username\" onChange={setUsername} value={username} />\n                        </div>\n\n                        <nav className=\"mt-4 flex overflow-hidden\">\n                            <button\n                                onClick={pickSSH}\n                                className={`\n                                    ${toggleSSH ? 'bg-indigo-500 text-white' : 'bg-gray-100 dark:bg-gray-700'}\n                                    pl-5 pr-4 py-2 text-xs font-semibold rounded-l-full focus:outline-none ring-0\n                                `}\n                            >\n                                SSH\n                            </button>\n                            <button\n                                onClick={pickPassword}\n                                className={`\n                                    ${!toggleSSH ? 'bg-indigo-500 text-white' : 'bg-gray-100 dark:bg-gray-700'}\n                                    pl-4 pr-5 py-2 text-xs font-semibold rounded-r-full focus:outline-none ring-0\n                                `}\n                            >\n                                Password\n                            </button>\n                        </nav>\n\n                        <div className=\"grid gap-4 content-start\">\n                            {!toggleSSH && (\n                                <div className=\"grid gap-2\">\n                                    <Label htmlFor=\"password\">Password</Label>\n                                    <Input id=\"password\" type=\"password\" onChange={setPassword} value={password} />\n                                </div>\n                            )}\n\n                            {toggleSSH && (\n                                <div className=\"grid gap-2\">\n                                    <Label htmlFor=\"privateKeyPath\">Private key path</Label>\n                                    <Input\n                                        id=\"privateKeyPath\"\n                                        value={privateKeyPath}\n                                        placeholder=\"~/.ssh/id_rsa\"\n                                        onChange={setPrivateKeyPath}\n                                    />\n                                </div>\n                            )}\n                        </div>\n\n                        <Button onClick={save}>Save</Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { useSyncExternalStore } from 'react';\nimport { Server } from '/shared/types';\n\nlet servers: Array<Server> = [];\n\nlet listeners = new Set<() => void>();\n\n\nconst serversStore = {\n\tsubscribe(onStoreChange: () => void) {\n\t\tlisteners.add(onStoreChange);\n\n\t\treturn () => {\n\t\t\tlisteners.delete(onStoreChange);\n\t\t};\n\t},\n\tgetSnapshot() {\n\t\treturn servers;\n\t},\n\tasync init() {\n\t\tservers = await window.Ray.servers.get();\n\n\t\temitChange();\n\t},\n\n};\n\nexport function reloadServers() {\n\tserversStore.init();\n}\n\nserversStore.init();\n\nfunction emitChange() {\n\tlisteners.forEach(listener => listener());\n}\n\nexport function useServers() {\n\treturn useSyncExternalStore(serversStore.subscribe, serversStore.getSnapshot);\n}","import React, { useEffect, useState } from 'react';\nimport { Server } from '/shared/types';\nimport ServerItem from '@/pages/servers/ServerItem';\nimport EditServer from '@/pages/servers/EditServer';\nimport Button from '@/pages/servers/components/Button';\nimport { reloadServers, useServers } from '@/stores/servers';\n\nexport default function Servers() {\n\tconst servers = useServers();\n\tconst [editing, setEditing] = useState<Server | null>();\n\n\tuseEffect(() => {\n\t\treloadServers();\n\t}, []);\n\n\tfunction newServer() {\n\t\tsetEditing({\n\t\t\tlabel: '',\n\t\t\tuuid: '',\n\t\t\thost: 'localhost',\n\t\t\tport: 22,\n\t\t\tpassword: '',\n\t\t\tprivateKeyPath: '',\n\t\t\tprivateKeyPassphrase: '',\n\t\t\tusername: '',\n\t\t});\n\t}\n\n\tconst credentialsNeedUpdating = servers.some((server) => server.needsCredentialsUpdate);\n\n\treturn (\n\t\t<main className=\"p-4 flex flex-col gap-4 mx-auto max-w-xl\">\n\t\t\t<h1 className=\"markup-h1\">Servers</h1>\n\n\t\t\t{credentialsNeedUpdating && (\n\t\t\t\t<p className=\"text-yellow-600 bg-yellow-100 border-yellow-200 border-opacity-50 text-sm rounded py-2 px-4\">\n\t\t\t\t\tIn{' '}\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"hover:text-yellow-500 font-bold underline cursor-pointer\"\n\t\t\t\t\t\thref=\"https://spatie.be/products/ray/release-notes#1.18.0\"\n\t\t\t\t\t>\n\t\t\t\t\t\tRay 1.18.0\n\t\t\t\t\t</a>{' '}\n\t\t\t\t\twe've changed how your server credentials are stored, which means any formerly saved server\n\t\t\t\t\tpasswords and private key passphrases need to be entered again.{' '}\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"hover:text-yellow-500 font-bold underline cursor-pointer\"\n\t\t\t\t\t\thref=\"https://freek.dev/2103-replacing-keytar-with-electrons-safestorage-in-ray\"\n\t\t\t\t\t>\n\t\t\t\t\t\tRead our blog post about why we made this change\n\t\t\t\t\t</a>\n\t\t\t\t\t.\n\t\t\t\t</p>\n\t\t\t)}\n\n\t\t\t<ul className=\"select-text\">\n\t\t\t\t{servers.map((server) => (\n\t\t\t\t\t<ServerItem\n\t\t\t\t\t\tkey={server.uuid}\n\t\t\t\t\t\tserver={server}\n\t\t\t\t\t\tonRemove={() => reloadServers()}\n\t\t\t\t\t\tonChange={() => reloadServers()}\n\t\t\t\t\t\tonEdit={() => setEditing(server)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t\t{editing && (\n\t\t\t\t<EditServer\n\t\t\t\t\tserver={editing}\n\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\tsetEditing(null);\n\t\t\t\t\t\treloadServers();\n\t\t\t\t\t}}\n\t\t\t\t\tonCancel={() => setEditing(null)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<div>{!editing && <Button\n\t\t\t\tonClick={() => newServer()}\n\t\t\t>Add server</Button>}</div>\n\t\t</main>\n\t)\n}\n\nexport function Header() {\n\treturn (\n\t\t<span className=\"text-sm font-bold absolute inset-0 flex justify-center items-center text-center\">\n            Servers\n        </span>\n\t);\n}"],"names":["Input","onChange","props","jsx","e","Label","htmlFor","children","Button","id","disabled","onClick","PrivateKeyPrompt","privateKeyPath","onSubmit","onCancel","privateKeyPassphrase","setPrivateKeyPassphrase","useState","save","cancel","jsxs","TimesIcon","value","noop","noop_1","ServerItem","server","onRemove","onEdit","isConnected","setIsConnected","isConnecting","setIsConnecting","showingPrivateKeyPrompt","setShowingPrivateKeyPrompt","connection","useMemo","useEffect","connect","targetServer","error","disconnect","remove","edit","handlePrivateKeyPromptSubmit","updatedServer","ConnectButton","HeaderButton","PenIcon","TrashIcon","needsCredentialsUpdate","BoltIcon","ExchangeIcon","PlugIcon","EditServer","label","setLabel","host","setHost","port","setPort","_a","password","setPassword","setPrivateKeyPath","username","setUsername","toggleSSH","setToggleSSH","pickSSH","pickPassword","servers","listeners","serversStore","onStoreChange","emitChange","reloadServers","listener","useServers","useSyncExternalStore","Servers","editing","setEditing","newServer","credentialsNeedUpdating","Header"],"mappings":"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","x_google_ignoreList":[4]}